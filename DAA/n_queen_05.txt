def n_queens(n):
    res=[]
    def is_safe(r,c,col,pos_diag,neg_diag):
        return c not in col and (r+c) not in pos_diag and (r-c) not in neg_diag
    def backtrack(r, col, pos_diag, neg_diag, board):
        if r==n:
            res.append([" ".join(row) for row in board])
            return
        for c in range(n):
            if is_safe(r, c, col, pos_diag, neg_diag):
                backtrack(
                r+1,
                col|{c},
                pos_diag|{r+c},
                neg_diag|{r-c},
                board + [["1" if j==c else "0" for j in range(n)]]
                )
    backtrack(0, set(), set(), set(), [])
    for sol in res:
        for row in sol:
            print(row)
        print()
if __name__=="__main__":
    n_queens(4)
